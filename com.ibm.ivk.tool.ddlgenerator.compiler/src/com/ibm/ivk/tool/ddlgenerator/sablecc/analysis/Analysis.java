/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.analysis;

import com.ibm.ivk.tool.ddlgenerator.sablecc.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAFile(AFile node);
    void caseAAttributeDecInFileStmt(AAttributeDecInFileStmt node);
    void caseAVarDecFileStmt(AVarDecFileStmt node);
    void caseAVarDecInFileStmt(AVarDecInFileStmt node);
    void caseAArrayDecFileStmt(AArrayDecFileStmt node);
    void caseAEnumDecInFileStmt(AEnumDecInFileStmt node);
    void caseATypeDecFileStmt(ATypeDecFileStmt node);
    void caseASubFileStmt(ASubFileStmt node);
    void caseAFunctionFileStmt(AFunctionFileStmt node);
    void caseAFunctionWithoutReturnTypeFileStmt(AFunctionWithoutReturnTypeFileStmt node);
    void caseADllFunctionFileStmt(ADllFunctionFileStmt node);
    void caseAWaitSubFileStmt(AWaitSubFileStmt node);
    void caseAGeneralStmtFileStmt(AGeneralStmtFileStmt node);
    void caseAAttributeDecInFunctionStmt(AAttributeDecInFunctionStmt node);
    void caseAVarDecFunctionStmt(AVarDecFunctionStmt node);
    void caseAVarDecInFunctionStmt(AVarDecInFunctionStmt node);
    void caseAVarDecInWithDataTypeFunctionStmt(AVarDecInWithDataTypeFunctionStmt node);
    void caseAVarDecListFunctionStmt(AVarDecListFunctionStmt node);
    void caseAArrayDecFunctionStmt(AArrayDecFunctionStmt node);
    void caseAVarSetFunctionStmt(AVarSetFunctionStmt node);
    void caseAIfStmtFunctionStmt(AIfStmtFunctionStmt node);
    void caseAIfStmtOneLineFunctionStmt(AIfStmtOneLineFunctionStmt node);
    void caseAElseIfStmFunctionStmt(AElseIfStmFunctionStmt node);
    void caseAElseStmtFunctionStmt(AElseStmtFunctionStmt node);
    void caseASelectStmtFunctionStmt(ASelectStmtFunctionStmt node);
    void caseAForEachStmtFunctionStmt(AForEachStmtFunctionStmt node);
    void caseAForEachStmtOnlyNextFunctionStmt(AForEachStmtOnlyNextFunctionStmt node);
    void caseAForStmtFunctionStmt(AForStmtFunctionStmt node);
    void caseAForStmtStepFunctionStmt(AForStmtStepFunctionStmt node);
    void caseAWhileStmtFunctionStmt(AWhileStmtFunctionStmt node);
    void caseADoWhileFunctionStmt(ADoWhileFunctionStmt node);
    void caseATryFunctionStmt(ATryFunctionStmt node);
    void caseAGotoCallFunctionStmt(AGotoCallFunctionStmt node);
    void caseAGotoCodeStartFunctionStmt(AGotoCodeStartFunctionStmt node);
    void caseAExitForFunctionStmt(AExitForFunctionStmt node);
    void caseAExitSubFunctionStmt(AExitSubFunctionStmt node);
    void caseAExitFunctionFunctionStmt(AExitFunctionFunctionStmt node);
    void caseAMethodCallFunctionStmt(AMethodCallFunctionStmt node);
    void caseAMethodCallWithoutParensFunctionStmt(AMethodCallWithoutParensFunctionStmt node);
    void caseADllFunctionCallFunctionStmt(ADllFunctionCallFunctionStmt node);
    void caseAWaitSubCallFunctionStmt(AWaitSubCallFunctionStmt node);
    void caseAArrayResizeFunctionStmt(AArrayResizeFunctionStmt node);
    void caseAArrayResizePreserveDataFunctionStmt(AArrayResizePreserveDataFunctionStmt node);
    void caseAArraySetElementFunctionStmt(AArraySetElementFunctionStmt node);
    void caseAOpenFileFunctionFunctionStmt(AOpenFileFunctionFunctionStmt node);
    void caseACloseFileFunctionFunctionStmt(ACloseFileFunctionFunctionStmt node);
    void caseAPrintFunctionFunctionStmt(APrintFunctionFunctionStmt node);
    void caseADebugPrintFunctionFunctionStmt(ADebugPrintFunctionFunctionStmt node);
    void caseAKillFunctionFunctionStmt(AKillFunctionFunctionStmt node);
    void caseARenameFileFunctionFunctionStmt(ARenameFileFunctionFunctionStmt node);
    void caseAMsgBoxFunctionWithoutParensFunctionStmt(AMsgBoxFunctionWithoutParensFunctionStmt node);
    void caseAExcelSheetFunctionStmt(AExcelSheetFunctionStmt node);
    void caseASetHiddenFunctionFunctionStmt(ASetHiddenFunctionFunctionStmt node);
    void caseASetVisibleFunctionFunctionStmt(ASetVisibleFunctionFunctionStmt node);
    void caseASelectFunctionFunctionStmt(ASelectFunctionFunctionStmt node);
    void caseAMoveFunctionFunctionStmt(AMoveFunctionFunctionStmt node);
    void caseAAutoFitFunctionFunctionStmt(AAutoFitFunctionFunctionStmt node);
    void caseASetNameExcelFunctionFunctionStmt(ASetNameExcelFunctionFunctionStmt node);
    void caseACopyFunctionFunctionStmt(ACopyFunctionFunctionStmt node);
    void caseADeleteFunctionFunctionStmt(ADeleteFunctionFunctionStmt node);
    void caseAActivateFunctionFunctionStmt(AActivateFunctionFunctionStmt node);
    void caseASetCellFunctionFunctionStmt(ASetCellFunctionFunctionStmt node);
    void caseAGeneralStmtFunctionStmt(AGeneralStmtFunctionStmt node);
    void caseACommentGeneralStmt(ACommentGeneralStmt node);
    void caseAEndOfLineGeneralStmt(AEndOfLineGeneralStmt node);
    void caseAId(AId node);
    void caseANotId(ANotId node);
    void caseAMethodChaining(AMethodChaining node);
    void caseAOnlyValueMethodChaining(AOnlyValueMethodChaining node);
    void caseAMethodChainingPart(AMethodChainingPart node);
    void caseAIdMethodChainingValue(AIdMethodChainingValue node);
    void caseAMethodCallMethodChainingValue(AMethodCallMethodChainingValue node);
    void caseACharacterString(ACharacterString node);
    void caseAOnlyValueCharacterString(AOnlyValueCharacterString node);
    void caseAStringPart(AStringPart node);
    void caseAGetNameExcelFunctionStringPartValue(AGetNameExcelFunctionStringPartValue node);
    void caseALenFunctionStringPartValue(ALenFunctionStringPartValue node);
    void caseANowFunctionStringPartValue(ANowFunctionStringPartValue node);
    void caseAExcelCellStringPartValue(AExcelCellStringPartValue node);
    void caseAMethodChainingStringPartValue(AMethodChainingStringPartValue node);
    void caseAStringStringPartValue(AStringStringPartValue node);
    void caseAShortIfStmtStringPartValue(AShortIfStmtStringPartValue node);
    void caseAArithmeticExpressionStringPartValue(AArithmeticExpressionStringPartValue node);
    void caseAArithmeticExpressionInParensStringPartValue(AArithmeticExpressionInParensStringPartValue node);
    void caseACIntFunctionStringPartValue(ACIntFunctionStringPartValue node);
    void caseATrimFunctionStringPartValue(ATrimFunctionStringPartValue node);
    void caseARTrimFunctionStringPartValue(ARTrimFunctionStringPartValue node);
    void caseAMethodCallStringPartValue(AMethodCallStringPartValue node);
    void caseAUCaseFunctionStringPartValue(AUCaseFunctionStringPartValue node);
    void caseALCaseFunctionStringPartValue(ALCaseFunctionStringPartValue node);
    void caseALeftFunctionStringPartValue(ALeftFunctionStringPartValue node);
    void caseARightFunctionStringPartValue(ARightFunctionStringPartValue node);
    void caseAMidFunctionTwoParamStringPartValue(AMidFunctionTwoParamStringPartValue node);
    void caseACStrFunctionStringPartValue(ACStrFunctionStringPartValue node);
    void caseACLngFunctionStringPartValue(ACLngFunctionStringPartValue node);
    void caseAArithmeticExpression(AArithmeticExpression node);
    void caseAOnlyValueArithmeticExpression(AOnlyValueArithmeticExpression node);
    void caseANegateIdArithmeticExpression(ANegateIdArithmeticExpression node);
    void caseANegatedArithmeticExpressionInParensArithmeticExpression(ANegatedArithmeticExpressionInParensArithmeticExpression node);
    void caseAArithmeticExpressionPart(AArithmeticExpressionPart node);
    void caseAArithmeticExpressionPartValueNotNegatedArithmeticExpressionPartValue(AArithmeticExpressionPartValueNotNegatedArithmeticExpressionPartValue node);
    void caseAArithmeticExpressionPartValueNegatedArithmeticExpressionPartValue(AArithmeticExpressionPartValueNegatedArithmeticExpressionPartValue node);
    void caseAStringTokenArithmeticExpressionPartValueNotNegated(AStringTokenArithmeticExpressionPartValueNotNegated node);
    void caseAMethodChainingArithmeticExpressionPartValueNotNegated(AMethodChainingArithmeticExpressionPartValueNotNegated node);
    void caseANumberArithmeticExpressionPartValueNotNegated(ANumberArithmeticExpressionPartValueNotNegated node);
    void caseAShortIfStmtArithmeticExpressionPartValueNotNegated(AShortIfStmtArithmeticExpressionPartValueNotNegated node);
    void caseAMethodCallArithmeticExpressionPartValueNotNegated(AMethodCallArithmeticExpressionPartValueNotNegated node);
    void caseACIntFunctionArithmeticExpressionPartValueNotNegated(ACIntFunctionArithmeticExpressionPartValueNotNegated node);
    void caseALenFunctionArithmeticExpressionPartValueNotNegated(ALenFunctionArithmeticExpressionPartValueNotNegated node);
    void caseALBoundFunctionArithmeticExpressionPartValueNotNegated(ALBoundFunctionArithmeticExpressionPartValueNotNegated node);
    void caseAUBoundFunctionArithmeticExpressionPartValueNotNegated(AUBoundFunctionArithmeticExpressionPartValueNotNegated node);
    void caseAArithmeticExpressionPartValueNegated(AArithmeticExpressionPartValueNegated node);
    void caseABooleanValueTrue(ABooleanValueTrue node);
    void caseABooleanValueFalse(ABooleanValueFalse node);
    void caseANullValue(ANullValue node);
    void caseAInputFunctionValue(AInputFunctionValue node);
    void caseAFreeFileFunctionValue(AFreeFileFunctionValue node);
    void caseALofFunctionValue(ALofFunctionValue node);
    void caseASplitFunctionWithLimitValue(ASplitFunctionWithLimitValue node);
    void caseANowFunctionValue(ANowFunctionValue node);
    void caseAFormatFunctionValue(AFormatFunctionValue node);
    void caseASpaceFunctionValue(ASpaceFunctionValue node);
    void caseAIdInParensValue(AIdInParensValue node);
    void caseACountFunctionValue(ACountFunctionValue node);
    void caseAExcelWorkbookValue(AExcelWorkbookValue node);
    void caseACellValue(ACellValue node);
    void caseASheetValue(ASheetValue node);
    void caseAMsgBoxFunctionValue(AMsgBoxFunctionValue node);
    void caseAMethodChainingValue(AMethodChainingValue node);
    void caseAShortIfStmtValue(AShortIfStmtValue node);
    void caseACharacterStringValue(ACharacterStringValue node);
    void caseAArithmeticExpressionValue(AArithmeticExpressionValue node);
    void caseAArithmeticExpressionInParensValue(AArithmeticExpressionInParensValue node);
    void caseAMethodValue(AMethodValue node);
    void caseAConditionValue(AConditionValue node);
    void caseATrueValue(ATrueValue node);
    void caseAFalseValue(AFalseValue node);
    void caseACStrFunctionValue(ACStrFunctionValue node);
    void caseACIntFunctionValue(ACIntFunctionValue node);
    void caseAUCaseFunctionValue(AUCaseFunctionValue node);
    void caseALCaseFunctionValue(ALCaseFunctionValue node);
    void caseALenFunctionValue(ALenFunctionValue node);
    void caseAMidFunctionValue(AMidFunctionValue node);
    void caseAMidFunctionTwoParamValue(AMidFunctionTwoParamValue node);
    void caseALeftFunctionValue(ALeftFunctionValue node);
    void caseARightFunctionValue(ARightFunctionValue node);
    void caseATrimFunctionValue(ATrimFunctionValue node);
    void caseALBoundFunctionValue(ALBoundFunctionValue node);
    void caseAUBoundFunctionValue(AUBoundFunctionValue node);
    void caseACLngFunctionValue(ACLngFunctionValue node);
    void caseACDblFunctionValue(ACDblFunctionValue node);
    void caseACSngFunctionValue(ACSngFunctionValue node);
    void caseARTrimFunctionValue(ARTrimFunctionValue node);
    void caseASplitFunctionValue(ASplitFunctionValue node);
    void caseAChrFunctionValue(AChrFunctionValue node);
    void caseALofFunctionBooleanValue(ALofFunctionBooleanValue node);
    void caseAShortIfStmtBooleanValue(AShortIfStmtBooleanValue node);
    void caseAMethodChainingInParensBooleanValue(AMethodChainingInParensBooleanValue node);
    void caseAMethodChainingBooleanValue(AMethodChainingBooleanValue node);
    void caseAMethodBooleanValue(AMethodBooleanValue node);
    void caseATrueBooleanValue(ATrueBooleanValue node);
    void caseAFalseBooleanValue(AFalseBooleanValue node);
    void caseACIntFunctionBooleanValue(ACIntFunctionBooleanValue node);
    void caseAStringValueWithoutParensStringValue(AStringValueWithoutParensStringValue node);
    void caseAStringValueWithParensStringValue(AStringValueWithParensStringValue node);
    void caseAExcelCellStringValueWithoutParens(AExcelCellStringValueWithoutParens node);
    void caseAMethodChainingStringValueWithoutParens(AMethodChainingStringValueWithoutParens node);
    void caseAShortIfStmtStringValueWithoutParens(AShortIfStmtStringValueWithoutParens node);
    void caseACharacterStringStringValueWithoutParens(ACharacterStringStringValueWithoutParens node);
    void caseAMethodStringValueWithoutParens(AMethodStringValueWithoutParens node);
    void caseACStrFunctionStringValueWithoutParens(ACStrFunctionStringValueWithoutParens node);
    void caseAUCaseFunctionStringValueWithoutParens(AUCaseFunctionStringValueWithoutParens node);
    void caseALCaseFunctionStringValueWithoutParens(ALCaseFunctionStringValueWithoutParens node);
    void caseAMidFunctionStringValueWithoutParens(AMidFunctionStringValueWithoutParens node);
    void caseAMidFunctionTwoParamStringValueWithoutParens(AMidFunctionTwoParamStringValueWithoutParens node);
    void caseALeftFunctionStringValueWithoutParens(ALeftFunctionStringValueWithoutParens node);
    void caseARightFunctionStringValueWithoutParens(ARightFunctionStringValueWithoutParens node);
    void caseATrimFunctionStringValueWithoutParens(ATrimFunctionStringValueWithoutParens node);
    void caseAStringValueWithParens(AStringValueWithParens node);
    void caseAArithmeticExpressionIntValue(AArithmeticExpressionIntValue node);
    void caseAShortIfStmtIntValue(AShortIfStmtIntValue node);
    void caseAMethodChainingIntValue(AMethodChainingIntValue node);
    void caseAMethodIntValue(AMethodIntValue node);
    void caseALenFunctionIntValue(ALenFunctionIntValue node);
    void caseACIntFunctionIntValue(ACIntFunctionIntValue node);
    void caseALongDataType(ALongDataType node);
    void caseAIntegerDataType(AIntegerDataType node);
    void caseASingleDataType(ASingleDataType node);
    void caseAStringDataType(AStringDataType node);
    void caseABooleanDataType(ABooleanDataType node);
    void caseAIdDataType(AIdDataType node);
    void caseAWorkbookDataType(AWorkbookDataType node);
    void caseAWorksheetDataType(AWorksheetDataType node);
    void caseAIntegerArrayDataType(AIntegerArrayDataType node);
    void caseAByValModifier(AByValModifier node);
    void caseAStaticModifier(AStaticModifier node);
    void caseADeclareModifier(ADeclareModifier node);
    void caseAGlobalModifier(AGlobalModifier node);
    void caseAConstModifier(AConstModifier node);
    void caseAPrivateModifier(APrivateModifier node);
    void caseAPublicModifier(APublicModifier node);
    void caseANotLogicalOperator(ANotLogicalOperator node);
    void caseAEqualLogicalOperator(AEqualLogicalOperator node);
    void caseANotEqualLogicalOperator(ANotEqualLogicalOperator node);
    void caseALessThanLogicalOperator(ALessThanLogicalOperator node);
    void caseAGreaterThanLogicalOperator(AGreaterThanLogicalOperator node);
    void caseALessThanOrEqualLogicalOperator(ALessThanOrEqualLogicalOperator node);
    void caseAGreaterThanOrEqualLogicalOperator(AGreaterThanOrEqualLogicalOperator node);
    void caseAAdditionArithmeticOperator(AAdditionArithmeticOperator node);
    void caseASubtractionArithmeticOperator(ASubtractionArithmeticOperator node);
    void caseAMultiplicationArithmeticOperator(AMultiplicationArithmeticOperator node);
    void caseADivisionArithmeticOperator(ADivisionArithmeticOperator node);
    void caseAModuloArithmeticOperator(AModuloArithmeticOperator node);
    void caseAModifierId(AModifierId node);
    void caseAComment(AComment node);
    void caseAVarDecIn(AVarDecIn node);
    void caseAVarDecInWithDataType(AVarDecInWithDataType node);
    void caseAEnumDecIn(AEnumDecIn node);
    void caseAGeneralStmtEnumValue(AGeneralStmtEnumValue node);
    void caseAVarSetEnumValue(AVarSetEnumValue node);
    void caseAWithoutValueEnumValue(AWithoutValueEnumValue node);
    void caseAAttributeDecIn(AAttributeDecIn node);
    void caseAVarDec(AVarDec node);
    void caseAVarDecList(AVarDecList node);
    void caseAVarDecListValue(AVarDecListValue node);
    void caseAArrayDec(AArrayDec node);
    void caseARangeArrayDec(ARangeArrayDec node);
    void caseAVarSet(AVarSet node);
    void caseATrimVarSet(ATrimVarSet node);
    void caseAAddFunctionVarSet(AAddFunctionVarSet node);
    void caseAArrayResize(AArrayResize node);
    void caseAArrayResizePreserveData(AArrayResizePreserveData node);
    void caseAArraySetElement(AArraySetElement node);
    void caseATypeDec(ATypeDec node);
    void caseAVarDecTypeDecValue(AVarDecTypeDecValue node);
    void caseAArrayDecTypeDecValue(AArrayDecTypeDecValue node);
    void caseAGeneralStmtTypeDecValue(AGeneralStmtTypeDecValue node);
    void caseASub(ASub node);
    void caseAParamList(AParamList node);
    void caseANoParamParamList(ANoParamParamList node);
    void caseAParamPart(AParamPart node);
    void caseAParamParamValue(AParamParamValue node);
    void caseAArrayParamParamValue(AArrayParamParamValue node);
    void caseAOptionalParamValueParamValue(AOptionalParamValueParamValue node);
    void caseAParamWithoutDataTypeParamValue(AParamWithoutDataTypeParamValue node);
    void caseAOptionalParamOptionalParamValue(AOptionalParamOptionalParamValue node);
    void caseAOptionalParamAsTypeOptionalParamValue(AOptionalParamAsTypeOptionalParamValue node);
    void caseAOptionalParamAsBooleanOptionalParamValue(AOptionalParamAsBooleanOptionalParamValue node);
    void caseAOptionalParamAsIntegerOptionalParamValue(AOptionalParamAsIntegerOptionalParamValue node);
    void caseAOptionalParamAsStringOptionalParamValue(AOptionalParamAsStringOptionalParamValue node);
    void caseAOptionalParamNoDataTypeOptionalParamValue(AOptionalParamNoDataTypeOptionalParamValue node);
    void caseAFunction(AFunction node);
    void caseAFunctionWithoutReturnType(AFunctionWithoutReturnType node);
    void caseAMethodCallInParens(AMethodCallInParens node);
    void caseAMethodCall(AMethodCall node);
    void caseAReplaceMethodCall(AReplaceMethodCall node);
    void caseAInStrMethodCall(AInStrMethodCall node);
    void caseAParamCallList(AParamCallList node);
    void caseANoParamParamCallList(ANoParamParamCallList node);
    void caseAParamCallPart(AParamCallPart node);
    void caseACommaParamCallPart(ACommaParamCallPart node);
    void caseAMoreParamCallValuesParamCallValue(AMoreParamCallValuesParamCallValue node);
    void caseAArithmeticExpressionParamCallValue(AArithmeticExpressionParamCallValue node);
    void caseAInputFunctionMoreParamCallValues(AInputFunctionMoreParamCallValues node);
    void caseALofFunctionMoreParamCallValues(ALofFunctionMoreParamCallValues node);
    void caseALBoundFunctionMoreParamCallValues(ALBoundFunctionMoreParamCallValues node);
    void caseAConditionMoreParamCallValues(AConditionMoreParamCallValues node);
    void caseAExcelWorkbookMoreParamCallValues(AExcelWorkbookMoreParamCallValues node);
    void caseAExcelSheetMoreParamCallValues(AExcelSheetMoreParamCallValues node);
    void caseAMethodChainingMoreParamCallValues(AMethodChainingMoreParamCallValues node);
    void caseAGetNameExcelFunctionMoreParamCallValues(AGetNameExcelFunctionMoreParamCallValues node);
    void caseACellMoreParamCallValues(ACellMoreParamCallValues node);
    void caseAActiveWorbookFullNameFunctionMoreParamCallValues(AActiveWorbookFullNameFunctionMoreParamCallValues node);
    void caseALCaseFunctionMoreParamCallValues(ALCaseFunctionMoreParamCallValues node);
    void caseAParamWithParamNameMoreParamCallValues(AParamWithParamNameMoreParamCallValues node);
    void caseAShortIfStmtMoreParamCallValues(AShortIfStmtMoreParamCallValues node);
    void caseACharacterStringMoreParamCallValues(ACharacterStringMoreParamCallValues node);
    void caseAMethodMoreParamCallValues(AMethodMoreParamCallValues node);
    void caseATrueMoreParamCallValues(ATrueMoreParamCallValues node);
    void caseAFalseMoreParamCallValues(AFalseMoreParamCallValues node);
    void caseACStrFunctionMoreParamCallValues(ACStrFunctionMoreParamCallValues node);
    void caseACIntFunctionMoreParamCallValues(ACIntFunctionMoreParamCallValues node);
    void caseAUCaseFunctionMoreParamCallValues(AUCaseFunctionMoreParamCallValues node);
    void caseALenFunctionMoreParamCallValues(ALenFunctionMoreParamCallValues node);
    void caseAMidFunctionMoreParamCallValues(AMidFunctionMoreParamCallValues node);
    void caseALeftFunctionMoreParamCallValues(ALeftFunctionMoreParamCallValues node);
    void caseARightFunctionMoreParamCallValues(ARightFunctionMoreParamCallValues node);
    void caseATrimFunctionMoreParamCallValues(ATrimFunctionMoreParamCallValues node);
    void caseAUBoundFunctionMoreParamCallValues(AUBoundFunctionMoreParamCallValues node);
    void caseAMethodCallWithoutParens(AMethodCallWithoutParens node);
    void caseANoParamMethodCallWithoutParens(ANoParamMethodCallWithoutParens node);
    void caseAParamCallListWithoutParens(AParamCallListWithoutParens node);
    void caseAParamCallListWithoutParensPart(AParamCallListWithoutParensPart node);
    void caseACommaParamCallListWithoutParensPart(ACommaParamCallListWithoutParensPart node);
    void caseASimpelConditionParamCallListWithoutParensValue(ASimpelConditionParamCallListWithoutParensValue node);
    void caseAExcelWorkbookParamCallListWithoutParensValue(AExcelWorkbookParamCallListWithoutParensValue node);
    void caseAParamWithParamNameParamCallListWithoutParensValue(AParamWithParamNameParamCallListWithoutParensValue node);
    void caseAShortIfStmtParamCallListWithoutParensValue(AShortIfStmtParamCallListWithoutParensValue node);
    void caseAMethodChainingParamCallListWithoutParensValue(AMethodChainingParamCallListWithoutParensValue node);
    void caseACharacterStringParamCallListWithoutParensValue(ACharacterStringParamCallListWithoutParensValue node);
    void caseAArithmeticExpressionParamCallListWithoutParensValue(AArithmeticExpressionParamCallListWithoutParensValue node);
    void caseAMethodParamCallListWithoutParensValue(AMethodParamCallListWithoutParensValue node);
    void caseATrueParamCallListWithoutParensValue(ATrueParamCallListWithoutParensValue node);
    void caseAFalseParamCallListWithoutParensValue(AFalseParamCallListWithoutParensValue node);
    void caseACStrFunctionParamCallListWithoutParensValue(ACStrFunctionParamCallListWithoutParensValue node);
    void caseACIntFunctionParamCallListWithoutParensValue(ACIntFunctionParamCallListWithoutParensValue node);
    void caseAUCaseFunctionParamCallListWithoutParensValue(AUCaseFunctionParamCallListWithoutParensValue node);
    void caseALenFunctionParamCallListWithoutParensValue(ALenFunctionParamCallListWithoutParensValue node);
    void caseAMidFunctionParamCallListWithoutParensValue(AMidFunctionParamCallListWithoutParensValue node);
    void caseALeftFunctionParamCallListWithoutParensValue(ALeftFunctionParamCallListWithoutParensValue node);
    void caseARightFunctionParamCallListWithoutParensValue(ARightFunctionParamCallListWithoutParensValue node);
    void caseATrimFunctionParamCallListWithoutParensValue(ATrimFunctionParamCallListWithoutParensValue node);
    void caseAParamWithParamName(AParamWithParamName node);
    void caseADllFunction(ADllFunction node);
    void caseADllFunctionCall(ADllFunctionCall node);
    void caseAWaitSub(AWaitSub node);
    void caseAWaitSubCall(AWaitSubCall node);
    void caseACStrFunction(ACStrFunction node);
    void caseACIntFunction(ACIntFunction node);
    void caseAUCaseFunction(AUCaseFunction node);
    void caseALenFunction(ALenFunction node);
    void caseAMidFunction(AMidFunction node);
    void caseAMidFunctionTwoParam(AMidFunctionTwoParam node);
    void caseALeftFunction(ALeftFunction node);
    void caseARightFunction(ARightFunction node);
    void caseATrimFunction(ATrimFunction node);
    void caseAUBoundFunction(AUBoundFunction node);
    void caseALBoundFunction(ALBoundFunction node);
    void caseACLngFunction(ACLngFunction node);
    void caseACDblFunction(ACDblFunction node);
    void caseACSngFunction(ACSngFunction node);
    void caseARTrimFunction(ARTrimFunction node);
    void caseALTrimFunction(ALTrimFunction node);
    void caseALCaseFunction(ALCaseFunction node);
    void caseASplitFunction(ASplitFunction node);
    void caseASplitFunctionWithLimit(ASplitFunctionWithLimit node);
    void caseAFormatFunction(AFormatFunction node);
    void caseASpaceFunction(ASpaceFunction node);
    void caseAChrFunction(AChrFunction node);
    void caseANowFunction(ANowFunction node);
    void caseAIfStmt(AIfStmt node);
    void caseAIfStmtOneLine(AIfStmtOneLine node);
    void caseAExitForIfStmtOneLineValue(AExitForIfStmtOneLineValue node);
    void caseAMethodChainingIfStmtOneLineValue(AMethodChainingIfStmtOneLineValue node);
    void caseAVarSetIfStmtOneLineValue(AVarSetIfStmtOneLineValue node);
    void caseAElseStmtIfStmtOneLineValue(AElseStmtIfStmtOneLineValue node);
    void caseAAutoFitFunctionIfStmtOneLineValue(AAutoFitFunctionIfStmtOneLineValue node);
    void caseAMethodCallIfStmtOneLineValue(AMethodCallIfStmtOneLineValue node);
    void caseAElseIfStm(AElseIfStm node);
    void caseAElseStmt(AElseStmt node);
    void caseAShortIfStmt(AShortIfStmt node);
    void caseASelectStmt(ASelectStmt node);
    void caseADefaultSelectCaseStmt(ADefaultSelectCaseStmt node);
    void caseAValuesSelectCaseStmt(AValuesSelectCaseStmt node);
    void caseAConditionInParens(AConditionInParens node);
    void caseACondition(ACondition node);
    void caseANotCondition(ANotCondition node);
    void caseAComparisonCondition(AComparisonCondition node);
    void caseAConditionInParensCondition(AConditionInParensCondition node);
    void caseANotValueCondition(ANotValueCondition node);
    void caseAAndLogicalPart(AAndLogicalPart node);
    void caseAOrLogicalPart(AOrLogicalPart node);
    void caseAAndNotLogicalPart(AAndNotLogicalPart node);
    void caseAOrNotLogicalPart(AOrNotLogicalPart node);
    void caseAConditionInParensLogicalValue(AConditionInParensLogicalValue node);
    void caseAComparisonLogicalValue(AComparisonLogicalValue node);
    void caseAValueLogicalValue(AValueLogicalValue node);
    void caseANumberLogicalValue(ANumberLogicalValue node);
    void caseAComparison(AComparison node);
    void caseALofFunctionComparisonValue(ALofFunctionComparisonValue node);
    void caseAConditionInParensComparisonValue(AConditionInParensComparisonValue node);
    void caseAGetNameExcelFunctionComparisonValue(AGetNameExcelFunctionComparisonValue node);
    void caseAMsgBoxFunctionComparisonValue(AMsgBoxFunctionComparisonValue node);
    void caseAExcelCellComparisonValue(AExcelCellComparisonValue node);
    void caseAMethodChainingComparisonValue(AMethodChainingComparisonValue node);
    void caseAShortIfStmtComparisonValue(AShortIfStmtComparisonValue node);
    void caseACharacterStringComparisonValue(ACharacterStringComparisonValue node);
    void caseACharacterStringInParanesComparisonValue(ACharacterStringInParanesComparisonValue node);
    void caseAMethodComparisonValue(AMethodComparisonValue node);
    void caseAMethodCallInParensComparisonValue(AMethodCallInParensComparisonValue node);
    void caseACStrFunctionComparisonValue(ACStrFunctionComparisonValue node);
    void caseAUCaseFunctionComparisonValue(AUCaseFunctionComparisonValue node);
    void caseALCaseFunctionComparisonValue(ALCaseFunctionComparisonValue node);
    void caseAMidFunctionComparisonValue(AMidFunctionComparisonValue node);
    void caseAMidFunctionTwoParamComparisonValue(AMidFunctionTwoParamComparisonValue node);
    void caseALeftFunctionComparisonValue(ALeftFunctionComparisonValue node);
    void caseARightFunctionComparisonValue(ARightFunctionComparisonValue node);
    void caseATrimFunctionComparisonValue(ATrimFunctionComparisonValue node);
    void caseAArithmeticExpressionComparisonValue(AArithmeticExpressionComparisonValue node);
    void caseAArithmeticExpressionInParensComparisonValue(AArithmeticExpressionInParensComparisonValue node);
    void caseATrueComparisonValue(ATrueComparisonValue node);
    void caseAFalseComparisonValue(AFalseComparisonValue node);
    void caseACIntFunctionComparisonValue(ACIntFunctionComparisonValue node);
    void caseALenFunctionComparisonValue(ALenFunctionComparisonValue node);
    void caseAUBoundFunctionComparisonValue(AUBoundFunctionComparisonValue node);
    void caseALBoundFunctionComparisonValue(ALBoundFunctionComparisonValue node);
    void caseASimpelCondition(ASimpelCondition node);
    void caseAOrSimpelConditionPart(AOrSimpelConditionPart node);
    void caseAIdSimpelConditionValue(AIdSimpelConditionValue node);
    void caseAShortIfStmtSimpelConditionValue(AShortIfStmtSimpelConditionValue node);
    void caseANotIdSimpelConditionValue(ANotIdSimpelConditionValue node);
    void caseAForEachStmt(AForEachStmt node);
    void caseAForEachStmtOnlyNext(AForEachStmtOnlyNext node);
    void caseAForStmt(AForStmt node);
    void caseAForStmtStep(AForStmtStep node);
    void caseAWhileStmt(AWhileStmt node);
    void caseADoWhile(ADoWhile node);
    void caseAOpenFileFunction(AOpenFileFunction node);
    void caseAOpenFileAppendModeOpenFileMode(AOpenFileAppendModeOpenFileMode node);
    void caseAOpenFileInputModeOpenFileMode(AOpenFileInputModeOpenFileMode node);
    void caseAOpenFileOutputModeOpenFileMode(AOpenFileOutputModeOpenFileMode node);
    void caseACloseFileFunction(ACloseFileFunction node);
    void caseAAPrintFunction(AAPrintFunction node);
    void caseABPrintFunction(ABPrintFunction node);
    void caseAValueCommaPrintFunctionPart(AValueCommaPrintFunctionPart node);
    void caseAValueSemicolonPrintFunctionPart(AValueSemicolonPrintFunctionPart node);
    void caseASemicolonPrintFunctionPart(ASemicolonPrintFunctionPart node);
    void caseAFreeFileFunction(AFreeFileFunction node);
    void caseADebugPrintFunction(ADebugPrintFunction node);
    void caseAKillFunction(AKillFunction node);
    void caseARenameFileFunction(ARenameFileFunction node);
    void caseAInputFunction(AInputFunction node);
    void caseALofFunction(ALofFunction node);
    void caseAMsgBoxFunction(AMsgBoxFunction node);
    void caseAMsgBoxFunctionWithoutParens(AMsgBoxFunctionWithoutParens node);
    void caseAExcelActiveWindow(AExcelActiveWindow node);
    void caseAActiveWorbookExcelWorkbook(AActiveWorbookExcelWorkbook node);
    void caseAExcelWorkbook(AExcelWorkbook node);
    void caseAIdExcelWorkbook(AIdExcelWorkbook node);
    void caseAActiveWindowExcelSheet(AActiveWindowExcelSheet node);
    void caseAWorkbookExcelSheet(AWorkbookExcelSheet node);
    void caseAMethodChainingExcelSheet(AMethodChainingExcelSheet node);
    void caseAIdExcelSheet(AIdExcelSheet node);
    void caseAWorksheetsExcelSheet(AWorksheetsExcelSheet node);
    void caseASelectedSheetsExcelSheetValue(ASelectedSheetsExcelSheetValue node);
    void caseAActiveSheetExcelSheetValue(AActiveSheetExcelSheetValue node);
    void caseASheetsExcelSheetValue(ASheetsExcelSheetValue node);
    void caseASheetsWithParamsExcelSheetValue(ASheetsWithParamsExcelSheetValue node);
    void caseAWorksheetsWithParamsExcelSheetValue(AWorksheetsWithParamsExcelSheetValue node);
    void caseAWorksheetsExcelSheetValue(AWorksheetsExcelSheetValue node);
    void caseAExcelRow(AExcelRow node);
    void caseACellExcelRow(ACellExcelRow node);
    void caseARowsRowsExcelRow(ARowsRowsExcelRow node);
    void caseAWithParamsExcelRow(AWithParamsExcelRow node);
    void caseAEntireRowExcelRowValue(AEntireRowExcelRowValue node);
    void caseACellExcelColumn(ACellExcelColumn node);
    void caseASheetExcelColumn(ASheetExcelColumn node);
    void caseAEntireColumnExcelColumneValue(AEntireColumnExcelColumneValue node);
    void caseAExcelColumneValue(AExcelColumneValue node);
    void caseAExcelCell(AExcelCell node);
    void caseAWithParamsExcelCellValue(AWithParamsExcelCellValue node);
    void caseAExcelCellValue(AExcelCellValue node);
    void caseAExcelRange(AExcelRange node);
    void caseAExcelRangeValue(AExcelRangeValue node);
    void caseAWithParamsExcelSelection(AWithParamsExcelSelection node);
    void caseAExcelSelection(AExcelSelection node);
    void caseACopyFunction(ACopyFunction node);
    void caseAActiveWorbookFullNameFunction(AActiveWorbookFullNameFunction node);
    void caseAColumnSetHiddenFunction(AColumnSetHiddenFunction node);
    void caseARowSetHiddenFunction(ARowSetHiddenFunction node);
    void caseASheetSetVisibleFunction(ASheetSetVisibleFunction node);
    void caseARangeSelectFunction(ARangeSelectFunction node);
    void caseACellSelectFunction(ACellSelectFunction node);
    void caseASheetSelectFunction(ASheetSelectFunction node);
    void caseASheetGetNameExcelFunction(ASheetGetNameExcelFunction node);
    void caseAWorkbookGetNameExcelFunction(AWorkbookGetNameExcelFunction node);
    void caseASetNameExcelFunction(ASetNameExcelFunction node);
    void caseACountFunction(ACountFunction node);
    void caseAMoveFunction(AMoveFunction node);
    void caseARowAutoFitFunction(ARowAutoFitFunction node);
    void caseAColumnAutoFitFunction(AColumnAutoFitFunction node);
    void caseASheetAddFunction(ASheetAddFunction node);
    void caseASheetDeleteFunction(ASheetDeleteFunction node);
    void caseASheetActivateFunction(ASheetActivateFunction node);
    void caseASetCellFunction(ASetCellFunction node);
    void caseATryResumeNextTry(ATryResumeNextTry node);
    void caseATrySetNameTry(ATrySetNameTry node);
    void caseATryErrorExitTry(ATryErrorExitTry node);
    void caseAGotoCall(AGotoCall node);
    void caseAGotoCodeStart(AGotoCodeStart node);

    void caseTWhiteSpace(TWhiteSpace node);
    void caseTOptionExpl(TOptionExpl node);
    void caseTContinueMark(TContinueMark node);
    void caseTDim(TDim node);
    void caseTByRef(TByRef node);
    void caseTByVal(TByVal node);
    void caseTSet(TSet node);
    void caseTEndOfLine(TEndOfLine node);
    void caseTOpenParen(TOpenParen node);
    void caseTCloseParen(TCloseParen node);
    void caseTComma(TComma node);
    void caseTAs(TAs node);
    void caseTAllocation(TAllocation node);
    void caseTBooleanTokenTrue(TBooleanTokenTrue node);
    void caseTBooleanTokenFalse(TBooleanTokenFalse node);
    void caseTAddition(TAddition node);
    void caseTSubtraction(TSubtraction node);
    void caseTMultiplication(TMultiplication node);
    void caseTDivision(TDivision node);
    void caseTModulo(TModulo node);
    void caseTNot(TNot node);
    void caseTNotEqual(TNotEqual node);
    void caseTLessThan(TLessThan node);
    void caseTGreaterThan(TGreaterThan node);
    void caseTLessThanOrEqual(TLessThanOrEqual node);
    void caseTGreaterThanOrEqual(TGreaterThanOrEqual node);
    void caseTStatic(TStatic node);
    void caseTDeclare(TDeclare node);
    void caseTPrivate(TPrivate node);
    void caseTPublic(TPublic node);
    void caseTGlobal(TGlobal node);
    void caseTConst(TConst node);
    void caseTOptional(TOptional node);
    void caseTNull(TNull node);
    void caseTAttribute(TAttribute node);
    void caseTInteger(TInteger node);
    void caseTLong(TLong node);
    void caseTSingle(TSingle node);
    void caseTBoolean(TBoolean node);
    void caseTString(TString node);
    void caseTArrayResizeToken(TArrayResizeToken node);
    void caseTPreserve(TPreserve node);
    void caseTTo(TTo node);
    void caseTEnumStart(TEnumStart node);
    void caseTEnumEnd(TEnumEnd node);
    void caseTTypeStart(TTypeStart node);
    void caseTTypeEnd(TTypeEnd node);
    void caseTSubStart(TSubStart node);
    void caseTSubEnd(TSubEnd node);
    void caseTFunctionStart(TFunctionStart node);
    void caseTFunctionEnd(TFunctionEnd node);
    void caseTDllFunctionToken(TDllFunctionToken node);
    void caseTDllFunctionCallToken(TDllFunctionCallToken node);
    void caseTActiveWindow(TActiveWindow node);
    void caseTActiveWorbook(TActiveWorbook node);
    void caseTActiveSheet(TActiveSheet node);
    void caseTWorkbooks(TWorkbooks node);
    void caseTWorkbook(TWorkbook node);
    void caseTWorksheets(TWorksheets node);
    void caseTSheets(TSheets node);
    void caseTSelectedSheets(TSelectedSheets node);
    void caseTWorksheet(TWorksheet node);
    void caseTWait(TWait node);
    void caseTCopy(TCopy node);
    void caseTFullName(TFullName node);
    void caseTName(TName node);
    void caseTHidden(THidden node);
    void caseTVisible(TVisible node);
    void caseTCells(TCells node);
    void caseTSelect(TSelect node);
    void caseTCount(TCount node);
    void caseTMove(TMove node);
    void caseTAdd(TAdd node);
    void caseTDelete(TDelete node);
    void caseTActivate(TActivate node);
    void caseTSelection(TSelection node);
    void caseTFormatConditions(TFormatConditions node);
    void caseTInterior(TInterior node);
    void caseTAutoFit(TAutoFit node);
    void caseTRange(TRange node);
    void caseTRows(TRows node);
    void caseTColumns(TColumns node);
    void caseTEntireRow(TEntireRow node);
    void caseTEntireColumn(TEntireColumn node);
    void caseTNow(TNow node);
    void caseTCStr(TCStr node);
    void caseTCInt(TCInt node);
    void caseTUCase(TUCase node);
    void caseTLen(TLen node);
    void caseTMid(TMid node);
    void caseTLeft(TLeft node);
    void caseTRight(TRight node);
    void caseTTrim(TTrim node);
    void caseTUBound(TUBound node);
    void caseTLBound(TLBound node);
    void caseTCLng(TCLng node);
    void caseTCDbl(TCDbl node);
    void caseTCSng(TCSng node);
    void caseTRTrim(TRTrim node);
    void caseTLTrim(TLTrim node);
    void caseTLCase(TLCase node);
    void caseTSplit(TSplit node);
    void caseTFormat(TFormat node);
    void caseTSpace(TSpace node);
    void caseTChr(TChr node);
    void caseTInStr(TInStr node);
    void caseTReplace(TReplace node);
    void caseTOr(TOr node);
    void caseTAnd(TAnd node);
    void caseTIf(TIf node);
    void caseTShortIf(TShortIf node);
    void caseTElseIf(TElseIf node);
    void caseTElse(TElse node);
    void caseTEndIf(TEndIf node);
    void caseTThen(TThen node);
    void caseTSelectStart(TSelectStart node);
    void caseTSelectCase(TSelectCase node);
    void caseTSelectEnd(TSelectEnd node);
    void caseTIn(TIn node);
    void caseTEachStart(TEachStart node);
    void caseTForStart(TForStart node);
    void caseTForEnd(TForEnd node);
    void caseTForStep(TForStep node);
    void caseTWhileStart(TWhileStart node);
    void caseTWhileEnd(TWhileEnd node);
    void caseTDoWhileStart(TDoWhileStart node);
    void caseTDoWhileEnd(TDoWhileEnd node);
    void caseTMethodChainingOperator(TMethodChainingOperator node);
    void caseTTryResumeNext(TTryResumeNext node);
    void caseTTrySetName(TTrySetName node);
    void caseTTryErrorExit(TTryErrorExit node);
    void caseTGoto(TGoto node);
    void caseTGotoId(TGotoId node);
    void caseTExitFor(TExitFor node);
    void caseTExitSub(TExitSub node);
    void caseTExitFunction(TExitFunction node);
    void caseTHash(THash node);
    void caseTOpenFile(TOpenFile node);
    void caseTOpenFileAppendMode(TOpenFileAppendMode node);
    void caseTOpenFileInputMode(TOpenFileInputMode node);
    void caseTOpenFileOutputMode(TOpenFileOutputMode node);
    void caseTPrint(TPrint node);
    void caseTFreeFile(TFreeFile node);
    void caseTDebugPrint(TDebugPrint node);
    void caseTKill(TKill node);
    void caseTClose(TClose node);
    void caseTInput(TInput node);
    void caseTLof(TLof node);
    void caseTCommentToken(TCommentToken node);
    void caseTMsgBox(TMsgBox node);
    void caseTStringToken(TStringToken node);
    void caseTAmpersand(TAmpersand node);
    void caseTSemicolon(TSemicolon node);
    void caseTNumber(TNumber node);
    void caseTIdToken(TIdToken node);
    void caseEOF(EOF node);
}
