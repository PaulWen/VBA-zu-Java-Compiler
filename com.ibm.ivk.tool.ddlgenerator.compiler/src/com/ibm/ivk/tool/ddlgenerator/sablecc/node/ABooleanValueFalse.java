/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ABooleanValueFalse extends PBooleanValueFalse
{
    private TBooleanTokenFalse _booleanTokenFalse_;

    public ABooleanValueFalse()
    {
        // Constructor
    }

    public ABooleanValueFalse(
        @SuppressWarnings("hiding") TBooleanTokenFalse _booleanTokenFalse_)
    {
        // Constructor
        setBooleanTokenFalse(_booleanTokenFalse_);

    }

    @Override
    public Object clone()
    {
        return new ABooleanValueFalse(
            cloneNode(this._booleanTokenFalse_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABooleanValueFalse(this);
    }

    public TBooleanTokenFalse getBooleanTokenFalse()
    {
        return this._booleanTokenFalse_;
    }

    public void setBooleanTokenFalse(TBooleanTokenFalse node)
    {
        if(this._booleanTokenFalse_ != null)
        {
            this._booleanTokenFalse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._booleanTokenFalse_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._booleanTokenFalse_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._booleanTokenFalse_ == child)
        {
            this._booleanTokenFalse_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._booleanTokenFalse_ == oldChild)
        {
            setBooleanTokenFalse((TBooleanTokenFalse) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
