/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AConditionInParensComparisonValue extends PComparisonValue
{
    private PConditionInParens _conditionInParens_;

    public AConditionInParensComparisonValue()
    {
        // Constructor
    }

    public AConditionInParensComparisonValue(
        @SuppressWarnings("hiding") PConditionInParens _conditionInParens_)
    {
        // Constructor
        setConditionInParens(_conditionInParens_);

    }

    @Override
    public Object clone()
    {
        return new AConditionInParensComparisonValue(
            cloneNode(this._conditionInParens_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConditionInParensComparisonValue(this);
    }

    public PConditionInParens getConditionInParens()
    {
        return this._conditionInParens_;
    }

    public void setConditionInParens(PConditionInParens node)
    {
        if(this._conditionInParens_ != null)
        {
            this._conditionInParens_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._conditionInParens_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._conditionInParens_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._conditionInParens_ == child)
        {
            this._conditionInParens_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._conditionInParens_ == oldChild)
        {
            setConditionInParens((PConditionInParens) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
