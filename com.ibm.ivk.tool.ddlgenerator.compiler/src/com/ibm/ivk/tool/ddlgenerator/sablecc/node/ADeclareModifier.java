/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ADeclareModifier extends PModifier
{
    private TDeclare _declare_;

    public ADeclareModifier()
    {
        // Constructor
    }

    public ADeclareModifier(
        @SuppressWarnings("hiding") TDeclare _declare_)
    {
        // Constructor
        setDeclare(_declare_);

    }

    @Override
    public Object clone()
    {
        return new ADeclareModifier(
            cloneNode(this._declare_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclareModifier(this);
    }

    public TDeclare getDeclare()
    {
        return this._declare_;
    }

    public void setDeclare(TDeclare node)
    {
        if(this._declare_ != null)
        {
            this._declare_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declare_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._declare_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._declare_ == child)
        {
            this._declare_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._declare_ == oldChild)
        {
            setDeclare((TDeclare) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
