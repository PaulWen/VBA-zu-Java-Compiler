/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AExcelWorkbook extends PExcelWorkbook
{
    private TWorkbooks _workbooks_;
    private PParamCallList _paramCallList_;

    public AExcelWorkbook()
    {
        // Constructor
    }

    public AExcelWorkbook(
        @SuppressWarnings("hiding") TWorkbooks _workbooks_,
        @SuppressWarnings("hiding") PParamCallList _paramCallList_)
    {
        // Constructor
        setWorkbooks(_workbooks_);

        setParamCallList(_paramCallList_);

    }

    @Override
    public Object clone()
    {
        return new AExcelWorkbook(
            cloneNode(this._workbooks_),
            cloneNode(this._paramCallList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExcelWorkbook(this);
    }

    public TWorkbooks getWorkbooks()
    {
        return this._workbooks_;
    }

    public void setWorkbooks(TWorkbooks node)
    {
        if(this._workbooks_ != null)
        {
            this._workbooks_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._workbooks_ = node;
    }

    public PParamCallList getParamCallList()
    {
        return this._paramCallList_;
    }

    public void setParamCallList(PParamCallList node)
    {
        if(this._paramCallList_ != null)
        {
            this._paramCallList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._paramCallList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._workbooks_)
            + toString(this._paramCallList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._workbooks_ == child)
        {
            this._workbooks_ = null;
            return;
        }

        if(this._paramCallList_ == child)
        {
            this._paramCallList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._workbooks_ == oldChild)
        {
            setWorkbooks((TWorkbooks) newChild);
            return;
        }

        if(this._paramCallList_ == oldChild)
        {
            setParamCallList((PParamCallList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
