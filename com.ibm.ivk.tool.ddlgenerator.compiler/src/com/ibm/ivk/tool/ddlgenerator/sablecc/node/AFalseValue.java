/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AFalseValue extends PValue
{
    private PBooleanValueFalse _booleanValueFalse_;

    public AFalseValue()
    {
        // Constructor
    }

    public AFalseValue(
        @SuppressWarnings("hiding") PBooleanValueFalse _booleanValueFalse_)
    {
        // Constructor
        setBooleanValueFalse(_booleanValueFalse_);

    }

    @Override
    public Object clone()
    {
        return new AFalseValue(
            cloneNode(this._booleanValueFalse_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFalseValue(this);
    }

    public PBooleanValueFalse getBooleanValueFalse()
    {
        return this._booleanValueFalse_;
    }

    public void setBooleanValueFalse(PBooleanValueFalse node)
    {
        if(this._booleanValueFalse_ != null)
        {
            this._booleanValueFalse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._booleanValueFalse_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._booleanValueFalse_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._booleanValueFalse_ == child)
        {
            this._booleanValueFalse_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._booleanValueFalse_ == oldChild)
        {
            setBooleanValueFalse((PBooleanValueFalse) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
