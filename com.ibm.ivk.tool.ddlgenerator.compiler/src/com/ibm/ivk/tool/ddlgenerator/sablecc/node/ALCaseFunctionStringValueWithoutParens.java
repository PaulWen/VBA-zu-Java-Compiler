/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ALCaseFunctionStringValueWithoutParens extends PStringValueWithoutParens
{
    private PLCaseFunction _lCaseFunction_;

    public ALCaseFunctionStringValueWithoutParens()
    {
        // Constructor
    }

    public ALCaseFunctionStringValueWithoutParens(
        @SuppressWarnings("hiding") PLCaseFunction _lCaseFunction_)
    {
        // Constructor
        setLCaseFunction(_lCaseFunction_);

    }

    @Override
    public Object clone()
    {
        return new ALCaseFunctionStringValueWithoutParens(
            cloneNode(this._lCaseFunction_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALCaseFunctionStringValueWithoutParens(this);
    }

    public PLCaseFunction getLCaseFunction()
    {
        return this._lCaseFunction_;
    }

    public void setLCaseFunction(PLCaseFunction node)
    {
        if(this._lCaseFunction_ != null)
        {
            this._lCaseFunction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lCaseFunction_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lCaseFunction_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lCaseFunction_ == child)
        {
            this._lCaseFunction_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lCaseFunction_ == oldChild)
        {
            setLCaseFunction((PLCaseFunction) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
