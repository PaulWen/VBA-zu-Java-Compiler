/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AMethodChainingPart extends PMethodChainingPart
{
    private PMethodChainingValue _methodChainingValue_;
    private TMethodChainingOperator _methodChainingOperator_;

    public AMethodChainingPart()
    {
        // Constructor
    }

    public AMethodChainingPart(
        @SuppressWarnings("hiding") PMethodChainingValue _methodChainingValue_,
        @SuppressWarnings("hiding") TMethodChainingOperator _methodChainingOperator_)
    {
        // Constructor
        setMethodChainingValue(_methodChainingValue_);

        setMethodChainingOperator(_methodChainingOperator_);

    }

    @Override
    public Object clone()
    {
        return new AMethodChainingPart(
            cloneNode(this._methodChainingValue_),
            cloneNode(this._methodChainingOperator_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMethodChainingPart(this);
    }

    public PMethodChainingValue getMethodChainingValue()
    {
        return this._methodChainingValue_;
    }

    public void setMethodChainingValue(PMethodChainingValue node)
    {
        if(this._methodChainingValue_ != null)
        {
            this._methodChainingValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._methodChainingValue_ = node;
    }

    public TMethodChainingOperator getMethodChainingOperator()
    {
        return this._methodChainingOperator_;
    }

    public void setMethodChainingOperator(TMethodChainingOperator node)
    {
        if(this._methodChainingOperator_ != null)
        {
            this._methodChainingOperator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._methodChainingOperator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._methodChainingValue_)
            + toString(this._methodChainingOperator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._methodChainingValue_ == child)
        {
            this._methodChainingValue_ = null;
            return;
        }

        if(this._methodChainingOperator_ == child)
        {
            this._methodChainingOperator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._methodChainingValue_ == oldChild)
        {
            setMethodChainingValue((PMethodChainingValue) newChild);
            return;
        }

        if(this._methodChainingOperator_ == oldChild)
        {
            setMethodChainingOperator((TMethodChainingOperator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
