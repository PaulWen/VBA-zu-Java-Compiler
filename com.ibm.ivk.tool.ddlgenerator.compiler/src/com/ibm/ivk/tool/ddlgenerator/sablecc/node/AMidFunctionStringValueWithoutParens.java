/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AMidFunctionStringValueWithoutParens extends PStringValueWithoutParens
{
    private PMidFunction _midFunction_;

    public AMidFunctionStringValueWithoutParens()
    {
        // Constructor
    }

    public AMidFunctionStringValueWithoutParens(
        @SuppressWarnings("hiding") PMidFunction _midFunction_)
    {
        // Constructor
        setMidFunction(_midFunction_);

    }

    @Override
    public Object clone()
    {
        return new AMidFunctionStringValueWithoutParens(
            cloneNode(this._midFunction_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMidFunctionStringValueWithoutParens(this);
    }

    public PMidFunction getMidFunction()
    {
        return this._midFunction_;
    }

    public void setMidFunction(PMidFunction node)
    {
        if(this._midFunction_ != null)
        {
            this._midFunction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._midFunction_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._midFunction_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._midFunction_ == child)
        {
            this._midFunction_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._midFunction_ == oldChild)
        {
            setMidFunction((PMidFunction) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
