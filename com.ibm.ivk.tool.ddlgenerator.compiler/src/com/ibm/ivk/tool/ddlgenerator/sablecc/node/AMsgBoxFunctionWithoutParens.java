/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AMsgBoxFunctionWithoutParens extends PMsgBoxFunctionWithoutParens
{
    private TMsgBox _msgBox_;
    private PParamCallListWithoutParens _paramCallListWithoutParens_;

    public AMsgBoxFunctionWithoutParens()
    {
        // Constructor
    }

    public AMsgBoxFunctionWithoutParens(
        @SuppressWarnings("hiding") TMsgBox _msgBox_,
        @SuppressWarnings("hiding") PParamCallListWithoutParens _paramCallListWithoutParens_)
    {
        // Constructor
        setMsgBox(_msgBox_);

        setParamCallListWithoutParens(_paramCallListWithoutParens_);

    }

    @Override
    public Object clone()
    {
        return new AMsgBoxFunctionWithoutParens(
            cloneNode(this._msgBox_),
            cloneNode(this._paramCallListWithoutParens_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMsgBoxFunctionWithoutParens(this);
    }

    public TMsgBox getMsgBox()
    {
        return this._msgBox_;
    }

    public void setMsgBox(TMsgBox node)
    {
        if(this._msgBox_ != null)
        {
            this._msgBox_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._msgBox_ = node;
    }

    public PParamCallListWithoutParens getParamCallListWithoutParens()
    {
        return this._paramCallListWithoutParens_;
    }

    public void setParamCallListWithoutParens(PParamCallListWithoutParens node)
    {
        if(this._paramCallListWithoutParens_ != null)
        {
            this._paramCallListWithoutParens_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._paramCallListWithoutParens_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._msgBox_)
            + toString(this._paramCallListWithoutParens_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._msgBox_ == child)
        {
            this._msgBox_ = null;
            return;
        }

        if(this._paramCallListWithoutParens_ == child)
        {
            this._paramCallListWithoutParens_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._msgBox_ == oldChild)
        {
            setMsgBox((TMsgBox) newChild);
            return;
        }

        if(this._paramCallListWithoutParens_ == oldChild)
        {
            setParamCallListWithoutParens((PParamCallListWithoutParens) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
