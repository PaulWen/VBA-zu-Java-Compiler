/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ANotIdSimpelConditionValue extends PSimpelConditionValue
{
    private PNotId _notId_;

    public ANotIdSimpelConditionValue()
    {
        // Constructor
    }

    public ANotIdSimpelConditionValue(
        @SuppressWarnings("hiding") PNotId _notId_)
    {
        // Constructor
        setNotId(_notId_);

    }

    @Override
    public Object clone()
    {
        return new ANotIdSimpelConditionValue(
            cloneNode(this._notId_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANotIdSimpelConditionValue(this);
    }

    public PNotId getNotId()
    {
        return this._notId_;
    }

    public void setNotId(PNotId node)
    {
        if(this._notId_ != null)
        {
            this._notId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._notId_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._notId_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._notId_ == child)
        {
            this._notId_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._notId_ == oldChild)
        {
            setNotId((PNotId) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
