/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AOpenFileAppendModeOpenFileMode extends POpenFileMode
{
    private TOpenFileAppendMode _openFileAppendMode_;

    public AOpenFileAppendModeOpenFileMode()
    {
        // Constructor
    }

    public AOpenFileAppendModeOpenFileMode(
        @SuppressWarnings("hiding") TOpenFileAppendMode _openFileAppendMode_)
    {
        // Constructor
        setOpenFileAppendMode(_openFileAppendMode_);

    }

    @Override
    public Object clone()
    {
        return new AOpenFileAppendModeOpenFileMode(
            cloneNode(this._openFileAppendMode_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOpenFileAppendModeOpenFileMode(this);
    }

    public TOpenFileAppendMode getOpenFileAppendMode()
    {
        return this._openFileAppendMode_;
    }

    public void setOpenFileAppendMode(TOpenFileAppendMode node)
    {
        if(this._openFileAppendMode_ != null)
        {
            this._openFileAppendMode_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._openFileAppendMode_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._openFileAppendMode_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._openFileAppendMode_ == child)
        {
            this._openFileAppendMode_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._openFileAppendMode_ == oldChild)
        {
            setOpenFileAppendMode((TOpenFileAppendMode) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
