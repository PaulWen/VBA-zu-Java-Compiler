/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AOpenFileInputModeOpenFileMode extends POpenFileMode
{
    private TOpenFileInputMode _openFileInputMode_;

    public AOpenFileInputModeOpenFileMode()
    {
        // Constructor
    }

    public AOpenFileInputModeOpenFileMode(
        @SuppressWarnings("hiding") TOpenFileInputMode _openFileInputMode_)
    {
        // Constructor
        setOpenFileInputMode(_openFileInputMode_);

    }

    @Override
    public Object clone()
    {
        return new AOpenFileInputModeOpenFileMode(
            cloneNode(this._openFileInputMode_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOpenFileInputModeOpenFileMode(this);
    }

    public TOpenFileInputMode getOpenFileInputMode()
    {
        return this._openFileInputMode_;
    }

    public void setOpenFileInputMode(TOpenFileInputMode node)
    {
        if(this._openFileInputMode_ != null)
        {
            this._openFileInputMode_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._openFileInputMode_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._openFileInputMode_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._openFileInputMode_ == child)
        {
            this._openFileInputMode_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._openFileInputMode_ == oldChild)
        {
            setOpenFileInputMode((TOpenFileInputMode) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
