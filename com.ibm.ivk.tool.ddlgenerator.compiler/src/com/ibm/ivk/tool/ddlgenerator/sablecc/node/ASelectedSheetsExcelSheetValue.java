/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ASelectedSheetsExcelSheetValue extends PExcelSheetValue
{
    private TSelectedSheets _selectedSheets_;

    public ASelectedSheetsExcelSheetValue()
    {
        // Constructor
    }

    public ASelectedSheetsExcelSheetValue(
        @SuppressWarnings("hiding") TSelectedSheets _selectedSheets_)
    {
        // Constructor
        setSelectedSheets(_selectedSheets_);

    }

    @Override
    public Object clone()
    {
        return new ASelectedSheetsExcelSheetValue(
            cloneNode(this._selectedSheets_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASelectedSheetsExcelSheetValue(this);
    }

    public TSelectedSheets getSelectedSheets()
    {
        return this._selectedSheets_;
    }

    public void setSelectedSheets(TSelectedSheets node)
    {
        if(this._selectedSheets_ != null)
        {
            this._selectedSheets_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._selectedSheets_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._selectedSheets_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._selectedSheets_ == child)
        {
            this._selectedSheets_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._selectedSheets_ == oldChild)
        {
            setSelectedSheets((TSelectedSheets) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
