/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AStringPart extends PStringPart
{
    private PStringPartValue _stringPartValue_;
    private TAmpersand _ampersand_;

    public AStringPart()
    {
        // Constructor
    }

    public AStringPart(
        @SuppressWarnings("hiding") PStringPartValue _stringPartValue_,
        @SuppressWarnings("hiding") TAmpersand _ampersand_)
    {
        // Constructor
        setStringPartValue(_stringPartValue_);

        setAmpersand(_ampersand_);

    }

    @Override
    public Object clone()
    {
        return new AStringPart(
            cloneNode(this._stringPartValue_),
            cloneNode(this._ampersand_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStringPart(this);
    }

    public PStringPartValue getStringPartValue()
    {
        return this._stringPartValue_;
    }

    public void setStringPartValue(PStringPartValue node)
    {
        if(this._stringPartValue_ != null)
        {
            this._stringPartValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringPartValue_ = node;
    }

    public TAmpersand getAmpersand()
    {
        return this._ampersand_;
    }

    public void setAmpersand(TAmpersand node)
    {
        if(this._ampersand_ != null)
        {
            this._ampersand_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ampersand_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stringPartValue_)
            + toString(this._ampersand_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stringPartValue_ == child)
        {
            this._stringPartValue_ = null;
            return;
        }

        if(this._ampersand_ == child)
        {
            this._ampersand_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stringPartValue_ == oldChild)
        {
            setStringPartValue((PStringPartValue) newChild);
            return;
        }

        if(this._ampersand_ == oldChild)
        {
            setAmpersand((TAmpersand) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
