/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ATrimFunctionStringValueWithoutParens extends PStringValueWithoutParens
{
    private PTrimFunction _trimFunction_;

    public ATrimFunctionStringValueWithoutParens()
    {
        // Constructor
    }

    public ATrimFunctionStringValueWithoutParens(
        @SuppressWarnings("hiding") PTrimFunction _trimFunction_)
    {
        // Constructor
        setTrimFunction(_trimFunction_);

    }

    @Override
    public Object clone()
    {
        return new ATrimFunctionStringValueWithoutParens(
            cloneNode(this._trimFunction_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATrimFunctionStringValueWithoutParens(this);
    }

    public PTrimFunction getTrimFunction()
    {
        return this._trimFunction_;
    }

    public void setTrimFunction(PTrimFunction node)
    {
        if(this._trimFunction_ != null)
        {
            this._trimFunction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._trimFunction_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._trimFunction_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._trimFunction_ == child)
        {
            this._trimFunction_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._trimFunction_ == oldChild)
        {
            setTrimFunction((PTrimFunction) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
