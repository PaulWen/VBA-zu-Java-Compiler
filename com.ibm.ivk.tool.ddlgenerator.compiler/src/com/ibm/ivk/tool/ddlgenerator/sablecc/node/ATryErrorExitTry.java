/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ATryErrorExitTry extends PTry
{
    private TTryErrorExit _tryErrorExit_;

    public ATryErrorExitTry()
    {
        // Constructor
    }

    public ATryErrorExitTry(
        @SuppressWarnings("hiding") TTryErrorExit _tryErrorExit_)
    {
        // Constructor
        setTryErrorExit(_tryErrorExit_);

    }

    @Override
    public Object clone()
    {
        return new ATryErrorExitTry(
            cloneNode(this._tryErrorExit_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATryErrorExitTry(this);
    }

    public TTryErrorExit getTryErrorExit()
    {
        return this._tryErrorExit_;
    }

    public void setTryErrorExit(TTryErrorExit node)
    {
        if(this._tryErrorExit_ != null)
        {
            this._tryErrorExit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tryErrorExit_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tryErrorExit_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tryErrorExit_ == child)
        {
            this._tryErrorExit_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tryErrorExit_ == oldChild)
        {
            setTryErrorExit((TTryErrorExit) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
