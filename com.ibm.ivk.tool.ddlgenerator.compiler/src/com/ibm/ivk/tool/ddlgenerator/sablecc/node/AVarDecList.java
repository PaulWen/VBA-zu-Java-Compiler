/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.ibm.ivk.tool.ddlgenerator.sablecc.node;

import java.util.*;
import com.ibm.ivk.tool.ddlgenerator.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AVarDecList extends PVarDecList
{
    private PVarDecListValue _first_;
    private final LinkedList<PVarDecListValue> _varDecListValue_ = new LinkedList<PVarDecListValue>();
    private PVarDec _varDec_;

    public AVarDecList()
    {
        // Constructor
    }

    public AVarDecList(
        @SuppressWarnings("hiding") PVarDecListValue _first_,
        @SuppressWarnings("hiding") List<PVarDecListValue> _varDecListValue_,
        @SuppressWarnings("hiding") PVarDec _varDec_)
    {
        // Constructor
        setFirst(_first_);

        setVarDecListValue(_varDecListValue_);

        setVarDec(_varDec_);

    }

    @Override
    public Object clone()
    {
        return new AVarDecList(
            cloneNode(this._first_),
            cloneList(this._varDecListValue_),
            cloneNode(this._varDec_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarDecList(this);
    }

    public PVarDecListValue getFirst()
    {
        return this._first_;
    }

    public void setFirst(PVarDecListValue node)
    {
        if(this._first_ != null)
        {
            this._first_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._first_ = node;
    }

    public LinkedList<PVarDecListValue> getVarDecListValue()
    {
        return this._varDecListValue_;
    }

    public void setVarDecListValue(List<PVarDecListValue> list)
    {
        this._varDecListValue_.clear();
        this._varDecListValue_.addAll(list);
        for(PVarDecListValue e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public PVarDec getVarDec()
    {
        return this._varDec_;
    }

    public void setVarDec(PVarDec node)
    {
        if(this._varDec_ != null)
        {
            this._varDec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varDec_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._first_)
            + toString(this._varDecListValue_)
            + toString(this._varDec_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._first_ == child)
        {
            this._first_ = null;
            return;
        }

        if(this._varDecListValue_.remove(child))
        {
            return;
        }

        if(this._varDec_ == child)
        {
            this._varDec_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._first_ == oldChild)
        {
            setFirst((PVarDecListValue) newChild);
            return;
        }

        for(ListIterator<PVarDecListValue> i = this._varDecListValue_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVarDecListValue) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._varDec_ == oldChild)
        {
            setVarDec((PVarDec) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
